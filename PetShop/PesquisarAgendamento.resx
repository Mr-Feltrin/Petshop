<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAARgAAALsAAAD6AAAA/wAAAP8AAAD0AAAAqQAAAC4AAAAAAAAAAAAA
        AAAAAAD/AAAA/wAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAJAAAAB4AAAAGAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD/AAAA/wAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAxgAA
        AJEAAAD/AAAA/wAAAFgAAAAAAAAAAAAAAAAAAAAoAAAAaAAAAAgAAAAAAAAAAAAAAB4AAABrAAAADwAA
        AAAAAAAAAAAAFAAAAGwAAAAXAAAAAAAAAAAAAAANAAAAagAAACEAAAAAAAAAAAAAAAAAAABWAAAA/wAA
        AP0AAAD/AAAA/wAAAFgAAAAAAAAAAAAAAAAAAADGAAAA/wAAAGwAAAAAAAAAAAAAAK0AAAD/AAAAhQAA
        AAAAAAAAAAAAlAAAAP8AAACeAAAAAAAAAAAAAAB7AAAA/wAAALcAAAAAAAAAAAAAAAAAAABYAAAA/wAA
        AP8AAAD/AAAA/wAAAFgAAAAAAAAAAAAAAAAAAABwAAAAzAAAAC0AAAAAAAAAAAAAAFwAAADQAAAAPQAA
        AAAAAAAAAAAASQAAANEAAABPAAAAAAAAAAAAAAA3AAAAzwAAAGMAAAAAAAAAAAAAAAAAAABYAAAA/wAA
        AP8AAAD/AAAA/wAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAAAA/wAA
        AP8AAAD/AAAA/wAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAAAA/wAA
        AP8AAAD/AAAA/wAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAAAA/wAA
        AP8AAAD/AAAA/wAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAAAA/wAA
        AP8AAADyAAAA/wAAAHMAAAAAAAAAAAAAAAAAAACQAAAA9QAAAD8AAAAAAAAAAAAAAAAAAAAAAAAAEQAA
        AOAAAADOAAAABAAAAAAAAAAAAAAAAAAAAAAAAABMAAAA9wAAAIEAAAAAAAAAAAAAAAAAAAB0AAAA/wAA
        APEAAAC5AAAA/wAAAOEAAAAdAAAAAAAAAAAAAADYAAAA/wAAAH4AAAAAAAAAAAAAAAAAAAAAAAAAOgAA
        AP8AAAD/AAAAHAAAAAAAAAAAAAAAAAAAAAAAAACNAAAA/wAAAMkAAAAAAAAAAAAAAB0AAADiAAAA/wAA
        ALcAAAA+AAAA/AAAAP8AAADzAAAAuQAAAKoAAADyAAAA/wAAANQAAACqAAAAqgAAAKoAAACqAAAAvgAA
        AP8AAAD/AAAAtAAAAKoAAACqAAAAqgAAAKoAAADZAAAA/wAAAO0AAACqAAAAugAAAPMAAAD/AAAA/AAA
        ADwAAAAAAAAAYQAAAPgAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD3AAAAXwAA
        AAAAAAAAAAAAAAAAACAAAAB9AAAAogAAAKoAAADyAAAA/wAAANQAAACqAAAAqgAAAKoAAACqAAAAvgAA
        AP8AAAD/AAAAtAAAAKoAAACqAAAAqgAAAKoAAADZAAAA/wAAAO0AAACqAAAAogAAAHwAAAAfAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADXAAAA/wAAAH4AAAAAAAAAAAAAAAAAAAAAAAAAOgAA
        AP8AAAD/AAAAHAAAAAAAAAAAAAAAAAAAAAAAAACNAAAA/wAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACLAAAA7gAAADwAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
        ANoAAADIAAAABAAAAAAAAAAAAAAAAAAAAAAAAABJAAAA8QAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACAAeAcAAHADAABgAQP/weAH/8PwB/+HGAcYhggHGIYIBxiGCAf/whAH/8AgBxjgAQcY4AMHGPgHB//
        +Hwf///gHGMY4BxjGOAcYxjgH///4B///+Af///gH///4Bx4eOAMeHjAAAAAAIAAAATAAAAM/Hh4/Px4
        ePw=
</value>
  </data>
</root>